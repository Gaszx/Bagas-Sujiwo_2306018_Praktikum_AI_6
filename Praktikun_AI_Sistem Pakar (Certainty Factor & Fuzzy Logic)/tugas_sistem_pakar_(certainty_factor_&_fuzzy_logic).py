# -*- coding: utf-8 -*-
"""Tugas Sistem Pakar (Certainty Factor & Fuzzy Logic).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dbF9KvFz_R-8vz3Dfg8S-oBjj_ECjg7P
"""

gejala_user = {
    "demam": 0.2,              # Diubah dari 0.7 menjadi 0.2
    "batuk": 0.5,
    "sakit_tenggorokan": 0.6,
    "pilek": 0.4,
    "sakit_kepala": 0.7,
    "lelah": 0.5,
    "bersin": 0.6,
    "nyeri_otot": 0.4
}

pengetahuan = {
    "flu": {
        "demam": 0.8,
        "batuk": 0.7,
        "sakit_tenggorokan": 0.6,
        "pilek": 0.5,
        "sakit_kepala": 0.6,
        "lelah": 0.4,
        "bersin": 0.5,
        "nyeri_otot": 0.5
    }
}

def hitung_cf(gejala_user, pengetahuan_pakar):
    cf_total = 0
    first = True
    for gejala, cf_user in gejala_user.items():
        if gejala in pengetahuan_pakar:
            cf_pakar = pengetahuan_pakar[gejala]
            cf = cf_user * cf_pakar
            if first:
                cf_total = cf
                first = False
            else:
                cf_total = cf_total + cf * (1 - cf_total)
    return cf_total

cf_flu = hitung_cf(gejala_user, pengetahuan["flu"])
print(f"CF diagnosis Flu: {cf_flu:.2f}")

# PENJELASAN:
# Setelah ditambahkan 5 gejala baru, total kombinasi CF menjadi lebih kompleks.
# Nilai awal masih berasal dari gejala "demam", yang hanya bernilai 0.2 * 0.8 = 0.16.
# Karena nilai awal ini rendah, kontribusi gejala berikutnya dikalikan dengan sisa ketidakpastian (1 - CF sebelumnya).
# Setiap gejala baru seperti "pilek", "sakit kepala", dan lainnya memberikan tambahan CF, tapi nilainya tetap dibatasi
# oleh seberapa besar sisa kepercayaan dari hasil sebelumnya.
# Misalnya, jika CF sementara sudah mendekati 1, tambahan berikutnya akan kecil karena dikalikan dengan (1 - CF sebelumnya).
# Sebaliknya, jika nilai awal kecil, maka butuh banyak gejala lain untuk mencapai CF total yang tinggi.

!pip install scikit-fuzzy

import numpy as np
import skfuzzy as fuzz
import matplotlib.pyplot as plt

suhu = np.arange(20, 41, 0.1)
kelembaban = np.arange(0, 101, 1)

rendah = fuzz.trimf(suhu, [20, 20, 28])
nyaman = fuzz.trimf(suhu, [25, 28, 31])
panas = fuzz.trimf(suhu, [30, 35, 40])

kering = fuzz.trimf(kelembaban, [0, 0, 50])
lembab = fuzz.trimf(kelembaban, [30, 60, 90])
sangat_lembab = fuzz.trimf(kelembaban, [70, 100, 100])

plt.figure()
plt.subplot(2, 1, 1)
plt.plot(suhu, rendah, 'b', label='Rendah')
plt.plot(suhu, nyaman, 'g', label='Nyaman')
plt.plot(suhu, panas, 'r', label='Panas')
plt.title('Fuzzy Set Suhu')
plt.xlabel('Suhu (°C)')
plt.ylabel('Keanggotaan')
plt.legend()
plt.grid(True)

plt.subplot(2, 1, 2)
plt.plot(kelembaban, kering, 'c', label='Kering')
plt.plot(kelembaban, lembab, 'm', label='Lembab')
plt.plot(kelembaban, sangat_lembab, 'y', label='Sangat Lembab')
plt.title('Fuzzy Set Kelembaban')
plt.xlabel('Kelembaban (%)')
plt.ylabel('Keanggotaan')
plt.legend()
plt.grid(True)

plt.tight_layout()
plt.show()

input_suhu = 22
input_kelembaban = 75

suhu_rendah = fuzz.interp_membership(suhu, rendah, input_suhu)
suhu_nyaman = fuzz.interp_membership(suhu, nyaman, input_suhu)
suhu_panas = fuzz.interp_membership(suhu, panas, input_suhu)

kelembaban_kering = fuzz.interp_membership(kelembaban, kering, input_kelembaban)
kelembaban_lembab = fuzz.interp_membership(kelembaban, lembab, input_kelembaban)
kelembaban_sangat_lembab = fuzz.interp_membership(kelembaban, sangat_lembab, input_kelembaban)

ac_pelan = np.fmin(suhu_rendah, kelembaban_kering)
ac_normal = np.fmin(suhu_nyaman, kelembaban_lembab)
ac_ekstra = np.fmin(suhu_rendah, kelembaban_sangat_lembab)
ac_cepat = np.fmin(suhu_panas, kelembaban_lembab)

print(f'Derajat keanggotaan suhu {input_suhu}°C:')
print(f'- Rendah: {suhu_rendah:.2f}')
print(f'- Nyaman: {suhu_nyaman:.2f}')
print(f'- Panas: {suhu_panas:.2f}')
print(f'Derajat keanggotaan kelembaban {input_kelembaban}%:')
print(f'- Kering: {kelembaban_kering:.2f}')
print(f'- Lembab: {kelembaban_lembab:.2f}')
print(f'- Sangat Lembab: {kelembaban_sangat_lembab:.2f}')
print(f'Output aturan AC:')
print(f'- Pelan: {ac_pelan:.2f}')
print(f'- Normal: {ac_normal:.2f}')
print(f'- Ekstra: {ac_ekstra:.2f}')
print(f'- Cepat: {ac_cepat:.2f}')  # hasil aturan baru

# Penjelasan singkat:
# ubah input_suhu jadi 22°C. Apa yang terjadi? Suhu 22°C masuk kategori Rendah, dan karena kelembaban 75% (Sangat Lembab),
# Hasil Variabel baru menggunakan variabel ac dengan aturan aturan nya.
# Mengapa suhu 28°C memiliki nilai keanggotaan di "Nyaman" dan "Panas"? Suhu 28°C bisa punya nilai di 'Nyaman' dan 'Panas' karena kurva fuzzy saling tumpang tindih (overlapping).
# jelaskan bagaimana hasil perubahannya dalam bentuk komentar atau teks cell Dengan nambahin kelembaban, keputusan jadi lebih akurat sesuai kondisi nyata.